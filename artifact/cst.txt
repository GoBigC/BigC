(
	program (
		declaration (
			type int
		)
		x
		(
			declarationRemainder (
				variableInitializer = (
					expression (
						assignmentExpression (
							logicalOrExpression (
								logicalAndExpression (
									equalityExpression (
										comparisonExpression (
											additionExpression (
												multiplicationExpression (
													unaryExpression (
														postfixExpression (
															primaryExpression (
																constant 15
															)))))))))))))
			;))
	(
		declaration (
			type float
		)
		y
		(
			declarationRemainder (
				variableInitializer = (
					expression (
						assignmentExpression (
							logicalOrExpression (
								logicalAndExpression (
									equalityExpression (
										comparisonExpression (
											additionExpression (
												multiplicationExpression (
													unaryExpression (
														postfixExpression (
															primaryExpression (
																constant 5.5
															)))))))))))))
			;))
	(
		declaration (
			type int
		)
		main
		(
			declarationRemainder (
				
			)
			(
				block { (
					blockItem (
						declaration (
							type int
						)
						a
						(
							arrayNotation [ (
								expression (
									assignmentExpression (
										logicalOrExpression (
											logicalAndExpression (
												equalityExpression (
													comparisonExpression (
														additionExpression (
															multiplicationExpression (
																unaryExpression (
																	postfixExpression (
																		primaryExpression (
																			constant 10
																		))))))))))))
							])
						(
							declarationRemainder ;
						)))
				(
					blockItem (
						declaration (
							type int
						)
						z
						(
							declarationRemainder (
								variableInitializer = (
									expression (
										assignmentExpression (
											logicalOrExpression (
												logicalAndExpression (
													equalityExpression (
														comparisonExpression (
															additionExpression (
																multiplicationExpression (
																	unaryExpression (
																		postfixExpression (
																			primaryExpression (
																				constant 4
																			)))))))))))))
							;)))
				(
					blockItem (
						statement (
							nonIfStatement (
								expression (
									assignmentExpression (
										logicalOrExpression (
											logicalAndExpression (
												equalityExpression (
													comparisonExpression (
														additionExpression (
															multiplicationExpression (
																unaryExpression (
																	postfixExpression (
																		primaryExpression a
																	)
																	(
																		arrayAccess [ (
																			expression (
																				assignmentExpression (
																					logicalOrExpression (
																						logicalAndExpression (
																							equalityExpression (
																								comparisonExpression (
																									additionExpression (
																										multiplicationExpression (
																											unaryExpression (
																												postfixExpression (
																													primaryExpression (
																														constant 0
																													))))))))))))
																		])))))))))
									(
										assignmentRest = (
											assignmentExpression (
												logicalOrExpression (
													logicalAndExpression (
														equalityExpression (
															comparisonExpression (
																additionExpression (
																	multiplicationExpression (
																		unaryExpression (
																			postfixExpression (
																				primaryExpression (
																					constant 1
																				))))))))))))))
							;)))
				(
					blockItem (
						statement (
							nonIfStatement (
								expression (
									assignmentExpression (
										logicalOrExpression (
											logicalAndExpression (
												equalityExpression (
													comparisonExpression (
														additionExpression (
															multiplicationExpression (
																unaryExpression (
																	postfixExpression (
																		primaryExpression a
																	)
																	(
																		arrayAccess [ (
																			expression (
																				assignmentExpression (
																					logicalOrExpression (
																						logicalAndExpression (
																							equalityExpression (
																								comparisonExpression (
																									additionExpression (
																										multiplicationExpression (
																											unaryExpression (
																												postfixExpression (
																													primaryExpression (
																														constant 1
																													))))))))))))
																		])))))))))
									(
										assignmentRest = (
											assignmentExpression (
												logicalOrExpression (
													logicalAndExpression (
														equalityExpression (
															comparisonExpression (
																additionExpression (
																	multiplicationExpression (
																		unaryExpression (
																			postfixExpression (
																				primaryExpression (
																					constant 1
																				))))))))))))))
							;)))
				(
					blockItem (
						statement (
							nonIfStatement (
								expression (
									assignmentExpression (
										logicalOrExpression (
											logicalAndExpression (
												equalityExpression (
													comparisonExpression (
														additionExpression (
															multiplicationExpression (
																unaryExpression (
																	postfixExpression (
																		primaryExpression a
																	)
																	(
																		arrayAccess [ (
																			expression (
																				assignmentExpression (
																					logicalOrExpression (
																						logicalAndExpression (
																							equalityExpression (
																								comparisonExpression (
																									additionExpression (
																										multiplicationExpression (
																											unaryExpression (
																												postfixExpression (
																													primaryExpression (
																														constant 2
																													))))))))))))
																		])))))))))
									(
										assignmentRest = (
											assignmentExpression (
												logicalOrExpression (
													logicalAndExpression (
														equalityExpression (
															comparisonExpression (
																additionExpression (
																	multiplicationExpression (
																		unaryExpression (
																			postfixExpression (
																				primaryExpression (
																					constant 1.2
																				))))))))))))))
							;)))
				(
					blockItem (
						declaration (
							type int
						)
						b
						(
							arrayNotation [ (
								expression (
									assignmentExpression (
										logicalOrExpression (
											logicalAndExpression (
												equalityExpression (
													comparisonExpression (
														additionExpression (
															multiplicationExpression (
																unaryExpression (
																	postfixExpression (
																		primaryExpression x
																	))))
														(
															additionExpressionRest (
																addSubtractOperator +
															)
															(
																multiplicationExpression (
																	unaryExpression (
																		postfixExpression (
																			primaryExpression (
																				constant 1
																			)))))))))))))
							])
						(
							declarationRemainder ;
						)))
				(
					blockItem (
						declaration (
							type int
						)
						c
						(
							arrayNotation [ (
								expression (
									assignmentExpression (
										logicalOrExpression (
											logicalAndExpression (
												equalityExpression (
													comparisonExpression (
														additionExpression (
															multiplicationExpression (
																unaryExpression (
																	postfixExpression (
																		primaryExpression x
																	))))
														(
															additionExpressionRest (
																addSubtractOperator +
															)
															(
																multiplicationExpression (
																	unaryExpression (
																		postfixExpression (
																			primaryExpression z
																		)))))
														(
															additionExpressionRest (
																addSubtractOperator +
															)
															(
																multiplicationExpression (
																	unaryExpression (
																		postfixExpression (
																			primaryExpression (
																				constant 1
																			)))))))))))))
							])
						(
							declarationRemainder ;
						)))
				(
					blockItem (
						declaration (
							type int
						)
						d
						(
							arrayNotation [ (
								expression (
									assignmentExpression (
										logicalOrExpression (
											logicalAndExpression (
												equalityExpression (
													comparisonExpression (
														additionExpression (
															multiplicationExpression (
																unaryExpression (
																	postfixExpression (
																		primaryExpression (
																			constant 0
																		))))))))))))
							])
						(
							declarationRemainder ;
						)))
				(
					blockItem (
						statement (
							nonIfStatement (
								expression (
									assignmentExpression (
										logicalOrExpression (
											logicalAndExpression (
												equalityExpression (
													comparisonExpression (
														additionExpression (
															multiplicationExpression (
																unaryExpression (
																	postfixExpression (
																		primaryExpression _printFloat
																	)
																	(
																		functionCallArgs (
																			(
																				argList (
																					assignmentExpression (
																						logicalOrExpression (
																							logicalAndExpression (
																								equalityExpression (
																									comparisonExpression (
																										additionExpression (
																											multiplicationExpression (
																												unaryExpression (
																													postfixExpression (
																														primaryExpression (
																															constant 3.14159
																														))))))))))))
																			))))))))))))
							;)))
				(
					blockItem (
						statement (
							nonIfStatement (
								returnStatement return (
									expression (
										assignmentExpression (
											logicalOrExpression (
												logicalAndExpression (
													equalityExpression (
														comparisonExpression (
															additionExpression (
																multiplicationExpression (
																	unaryExpression (
																		postfixExpression (
																			primaryExpression (
																				constant 0
																			))))))))))))
								;))))
				})))
	<EOF>)