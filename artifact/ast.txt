========== AST ==========
Program (Line 1, Col 0) with 3 declarations
 Declaration 1:
 VarDeclaration (Line 1, Col 0): x of type int with initializer:
   IntegerLiteral (Line 1, Col 8): 15
 Declaration 2:
 VarDeclaration (Line 2, Col 0): y of type float with initializer:
   FloatLiteral (Line 2, Col 10): 5.500000
 Declaration 3:
 FunctionDeclaration (Line 4, Col 0): main returns int with 0 parameters
   Body:
   Block (Line 4, Col 11) with 9 items
     Item 1:
     VarDeclaration (Line 6, Col 4): a of type array of int with size IntegerLiteral (Line 6, Col 10): 10

     Item 2:
     VarDeclaration (Line 7, Col 4): z of type int with initializer:
       IntegerLiteral (Line 7, Col 12): 4
     Item 3:
     ExpressionStatement (Line 9, Col 4):
       BinaryExpression (Line 9, Col 9): Operator '='
         Left:
         ArrayAccessExpression (Line 9, Col 5):
           Array:
           Identifier (Line 9, Col 4): a
           Index:
           IntegerLiteral (Line 9, Col 6): 0
         Right:
         IntegerLiteral (Line 9, Col 11): 1
     Item 4:
     ExpressionStatement (Line 10, Col 4):
       BinaryExpression (Line 10, Col 9): Operator '='
         Left:
         ArrayAccessExpression (Line 10, Col 5):
           Array:
           Identifier (Line 10, Col 4): a
           Index:
           IntegerLiteral (Line 10, Col 6): 1
         Right:
         IntegerLiteral (Line 10, Col 11): 1
     Item 5:
     ExpressionStatement (Line 11, Col 4):
       BinaryExpression (Line 11, Col 9): Operator '='
         Left:
         ArrayAccessExpression (Line 11, Col 5):
           Array:
           Identifier (Line 11, Col 4): a
           Index:
           IntegerLiteral (Line 11, Col 6): 2
         Right:
         FloatLiteral (Line 11, Col 11): 1.200000
     Item 6:
     VarDeclaration (Line 13, Col 4): b of type array of int with size BinaryExpression (Line 13, Col 11): Operator '+'
  Left:
  Identifier (Line 13, Col 10): x
  Right:
  IntegerLiteral (Line 13, Col 12): 1

     Item 7:
     VarDeclaration (Line 14, Col 4): c of type array of float with size BinaryExpression (Line 14, Col 15): Operator '+'
  Left:
  BinaryExpression (Line 14, Col 13): Operator '+'
    Left:
    Identifier (Line 14, Col 12): x
    Right:
    Identifier (Line 14, Col 14): z
  Right:
  IntegerLiteral (Line 14, Col 16): 1

     Item 8:
     ExpressionStatement (Line 75, Col 4):
       FunctionCallExpression (Line 75, Col 15) with 1 arguments:
         Function:
         Identifier (Line 75, Col 4): _printFloat
         Argument 1:
           FloatLiteral (Line 75, Col 16): 3.141590
     Item 9:
     ReturnStatement (Line 111, Col 4):
       IntegerLiteral (Line 111, Col 11): 0
